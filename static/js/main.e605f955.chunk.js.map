{"version":3,"sources":["components/Input.js","components/List.js","components/Toolbar.js","TodoApp.js","index.js"],"names":["Input","_ref","newItemText","onNewItemTextChange","onItemAdded","react_default","a","createElement","Fragment","type","className","value","onChange","event","target","defaultChecked","onClick","List","todos","filterValue","archiveItems","items","filter","item","done","filterItems","itemsArr","map","key","id","checked","text","Toolbar","changeFIlter","onCleanArchived","TodoApp","onItemSelected","onItemsArchive","uniqueId","components_List","components_Input","components_Toolbar","length","App","state","findWithProp","array","attr","i","handleItemSelection","updatedTodos","Object","toConsumableArray","_this","theTodo","isDone","objectSpread","setState","handleItemAdded","_this$state","Math","floor","random","newTodo","concat","handleNewItemTextChange","handleItemsArchive","newArchivedItems","newItems","_ref2","handleFIlterChange","handleCleanArchive","_this$state2","this","src_TodoApp","handleFilterItems","React","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.e605f955.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = ({ newItemText, onNewItemTextChange, onItemAdded }) => (\n  <>\n    <input\n      type=\"text\"\n      className=\"Todo__input\"\n      value={newItemText}\n      onChange={event => {\n        onNewItemTextChange(event.target.value);\n      }}\n      defaultChecked\n    />\n    <button className=\"Todo__add-button btn\" onClick={() => onItemAdded()}>\n      Add\n    </button>\n  </>\n);\n\nexport default Input;\n","import React from \"react\";\n\nconst filterItems = (items, filterValue) => {\n  if (filterValue === \"all\") {\n    return items;\n  } else if (filterValue === \"active\") {\n    return items.filter(item => {\n      return item.done === false;\n    });\n  } else if (filterValue === \"completed\") {\n    return items.filter(item => {\n      return item.done;\n    });\n  }\n};\n\nconst List = ({ todos, filterValue, onChange, archiveItems }) => {\n  const items = filterItems(todos, filterValue);\n  const itemsArr =\n    filterValue === \"archived\" ? archiveItems : !items ? todos : items;\n\n  return (\n    <div className=\"Todo__list\">\n      {itemsArr.map(item => (\n        <label\n          key={item.id}\n          className={\n            item.done\n              ? \"Todo__Item-checked checkbox-custom-label\"\n              : \"checkbox-custom-label\"\n          }\n        >\n          <input\n            className=\"checkbox-custom\"\n            type=\"checkbox\"\n            checked={item.done}\n            onChange={() => onChange(item.id)}\n          />\n          <span className=\"check\" />\n          {item.text}\n        </label>\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\nconst Toolbar = ({ changeFIlter, onCleanArchived }) => (\n  <div>\n    <button\n      className=\"Todo__all-button btn\"\n      onClick={() => changeFIlter(\"all\")}\n    >\n      All\n    </button>\n    <button\n      className=\"Todo__active-button btn\"\n      onClick={() => changeFIlter(\"active\")}\n    >\n      Active\n    </button>\n    <button\n      className=\"Todo__completed-button btn\"\n      onClick={() => changeFIlter(\"completed\")}\n    >\n      Completed\n    </button>\n    <button\n      className=\"Todo__archived-button btn\"\n      onClick={() => changeFIlter(\"archived\")}\n    >\n      Archived\n    </button>\n    <button\n      className=\"Todo__clean-button btn\"\n      onClick={() => onCleanArchived()}\n    >\n      Clean archived\n    </button>\n  </div>\n);\n\nexport default Toolbar;\n","import React from \"react\";\nimport Input from \"./components/Input\";\nimport List from \"./components/List\";\nimport Toolbar from \"./components/Toolbar\";\n\nconst TodoApp = ({\n  todos,\n  newItemText,\n  onItemSelected,\n  onItemAdded,\n  onNewItemTextChange,\n  onItemsArchive,\n  onCleanArchived,\n  uniqueId,\n  changeFIlter,\n  filterValue,\n  filterItems,\n  archiveItems\n}) => {\n  const handleItemClick = id => {\n    onItemSelected(id);\n  };\n\n  const handleItemsLeft = items => {\n    const itemsLeft = items.filter(item => {\n      return item.done === false;\n    });\n    return itemsLeft.length;\n  };\n\n  return (\n    <div className=\"Todo\">\n      <div className=\"Todo-center\">\n        <h2 className=\"Todo__title\">My Todo</h2>\n        <button\n          className=\"Todo__archive-button btn\"\n          onClick={() => onItemsArchive()}\n        >\n          Archive\n        </button>\n      </div>\n      <List\n        todos={todos}\n        archiveItems={archiveItems}\n        filterValue={filterValue}\n        onChange={handleItemClick}\n        filterItems={filterItems}\n      />\n      <div className=\"Todo-center\">\n        <Input\n          newItemText={newItemText}\n          onNewItemTextChange={onNewItemTextChange}\n          onItemAdded={onItemAdded}\n        />\n        <Toolbar\n          changeFIlter={changeFIlter}\n          onCleanArchived={onCleanArchived}\n        />\n\n        <p className=\"Todo__items-left\">{handleItemsLeft(todos)} has left</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./TodoApp\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    archiveItems: [],\n    newItemText: \"\",\n    uniqueId: 0,\n    filterValue: \"\"\n  };\n\n  findWithProp = (array, attr, id) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (array[i][attr] === id) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  handleItemSelection = id => {\n    const updatedTodos = [...this.state.todos];\n\n    let theTodo = this.findWithProp(updatedTodos, \"id\", +id);\n    const isDone = this.state.todos[theTodo].done;\n\n    updatedTodos[theTodo] = {\n      ...updatedTodos[theTodo],\n      done: !isDone\n    };\n\n    this.setState({\n      todos: updatedTodos\n    });\n  };\n\n  handleItemAdded = () => {\n    let { uniqueId, newItemText } = this.state;\n\n    uniqueId += Math.floor(Math.random() * 100);\n\n    if (newItemText) {\n      let newTodo = {\n        id: uniqueId,\n        text: newItemText,\n        done: false\n      };\n\n      this.setState(({ todos }) => {\n        return {\n          todos: [...todos, newTodo],\n          newItemText: \"\",\n          uniqueId: uniqueId\n        };\n      });\n    }\n  };\n\n  handleNewItemTextChange = text => {\n    this.setState({\n      newItemText: text\n    });\n  };\n\n  handleItemsArchive = () => {\n    const { todos } = this.state;\n    const newArchivedItems = todos.filter(item => {\n      return item.done === true;\n    });\n\n    const newItems = todos.filter(item => {\n      return item.done === false;\n    });\n\n    this.setState(({ archiveItems }) => {\n      return {\n        todos: newItems,\n        archiveItems: [...archiveItems, ...newArchivedItems]\n      };\n    });\n  };\n\n  handleFIlterChange = filterValue => {\n    this.setState({ filterValue });\n  };\n\n  handleCleanArchive = () => {\n    this.setState({\n      archiveItems: []\n    });\n  };\n\n  render() {\n    const {\n      uniqueId,\n      todos,\n      archiveItems,\n      newItemText,\n      filterValue\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <TodoApp\n          todos={todos}\n          archiveItems={archiveItems}\n          newItemText={newItemText}\n          onItemSelected={this.handleItemSelection}\n          onItemAdded={this.handleItemAdded}\n          onNewItemTextChange={this.handleNewItemTextChange}\n          onItemsArchive={this.handleItemsArchive}\n          onCleanArchived={this.handleCleanArchive}\n          uniqueId={uniqueId}\n          changeFIlter={this.handleFIlterChange}\n          filterValue={filterValue}\n          filterItems={this.handleFilterItems}\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}