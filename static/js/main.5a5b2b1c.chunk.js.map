{"version":3,"sources":["components/Input.js","components/List.js","components/Toolbar.js","TodoApp.js","index.js"],"names":["Input","_ref","newItemText","onNewItemTextChange","onItemAdded","react_default","a","createElement","Fragment","type","className","value","onChange","event","target","defaultChecked","onClick","List","todos","filterValue","filterItems","map","item","id","Toolbar","changeFIlter","TodoApp","onItemSelected","children","onItemsArchive","onItemsAll","onItemsActive","onItemsCompleted","onCleanCompleted","uniqueId","components_List","components_Input","components_Toolbar","length","App","state","checkedtodos","oldItems","active","checkedItems","all","allItems","uniqueIds","remove","array","element","splice","gatherNew","filter","todo","findWithProp","attr","i","handleItemSelection","updatedTodos","Object","toConsumableArray","_this","updatedAll","theTodo","isDone","done","_this$state","objectSpread","push","setState","handleItemAdded","_this$state2","Math","floor","random","newTodo","text","concat","handleNewItemTextChange","handleItemsArchive","_ref2","handleFIlterChange","handleFilterItems","items","_ref3","_ref4","_ref5","_ref6","_this$state3","this","src_TodoApp","handleAll","handleActive","handleCompleted","handleCleanCompleted","React","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.5a5b2b1c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = ({ newItemText, onNewItemTextChange, onItemAdded }) => (\n  <>\n    <input\n      type=\"text\"\n      className=\"Todo__new-item-text\"\n      value={newItemText}\n      onChange={event => {\n        onNewItemTextChange(event.target.value);\n      }}\n      defaultChecked\n    />\n    <button className=\"Todo__add-button btn\" onClick={() => onItemAdded()}>\n      Add\n    </button>\n  </>\n);\n\nexport default Input;\n","import React from \"react\";\n\nconst List = ({ todos, filterValue, filterItems, onChange }) => {\n  const items = filterItems(todos, filterValue);\n\n  items.map(item => (\n    <label>\n      <input type=\"checkbox\" onChange={() => onChange(item.id)} />\n      {item.value}\n    </label>\n  ));\n};\n\nexport default List;\n","import React from \"react\";\n\nconst Toolbar = ({ changeFIlter }) => (\n  <>\n    <button\n      className=\"Todo__all-button btn\"\n      onClick={() => changeFIlter(\"all\")}\n    >\n      All\n    </button>\n    <button\n      className=\"Todo__active-button btn\"\n      onClick={() => changeFIlter(\"active\")}\n    >\n      Active\n    </button>\n    <button\n      className=\"Todo__completed-button btn\"\n      onClick={() => changeFIlter(\"completed\")}\n    >\n      Completed\n    </button>\n    <br />\n    <button\n      className=\"Todo__clean-button btn\"\n      onClick={() => changeFIlter(\"clean\")}\n    >\n      Clean completed\n    </button>\n  </>\n);\n\nexport default Toolbar;\n","import React from \"react\";\nimport Input from \"./components/Input\";\nimport List from \"./components/List\";\nimport Toolbar from \"./components/Toolbar\";\n\nconst TodoApp = ({\n  todos,\n  newItemText,\n  children,\n  onItemSelected,\n  onItemAdded,\n  onNewItemTextChange,\n  onItemsArchive,\n  onItemsAll,\n  onItemsActive,\n  onItemsCompleted,\n  onCleanCompleted,\n  uniqueId,\n\n  changeFIlter,\n  filterValue,\n  filterItems\n}) => {\n  const handleItemClick = value => {\n    onItemSelected(value);\n  };\n\n  return (\n    <div className=\"Todo\">\n      <h2 className=\"Todo__title\">My Todo</h2>\n      <button\n        className=\"Todo__archive-button btn\"\n        onClick={() => onItemsArchive()}\n      >\n        Archive\n      </button>\n      <br />\n      <List\n        todos={todos}\n        filterValue={filterValue}\n        onChange={handleItemClick}\n        filterItems={filterItems}\n      />\n\n      <br />\n      <Input\n        newItemText={newItemText}\n        onNewItemTextChange={onNewItemTextChange}\n        onItemAdded={onItemAdded}\n      />\n      <br />\n      <Toolbar changeFIlter={changeFIlter} />\n      <p>{todos.length} has left</p>\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./TodoApp\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    checkedtodos: [],\n    newItemText: \"\",\n    oldItems: [],\n    uniqueId: 0,\n    active: [],\n    checkedItems: [],\n    all: true,\n    allItems: [],\n    uniqueIds: [],\n    filterValue: \"\"\n  };\n\n  remove = (array, element) => {\n    array.splice(element, 1);\n  };\n\n  gatherNew = (todos, element) => {\n    return todos.filter(todo => {\n      return todo.id !== element;\n    });\n  };\n\n  findWithProp = (array, attr, id) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (array[i][attr] === id) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  handleItemSelection = id => {\n    const updatedTodos = [...this.state.todos];\n    const updatedAll = [...this.state.allItems];\n\n    let theTodo = this.findWithProp(updatedTodos, \"id\", +id);\n    const isDone = this.state.todos[theTodo].done;\n    const { active, checkedItems, todos } = this.state;\n\n    updatedTodos[theTodo] = {\n      ...updatedTodos[theTodo],\n      done: !isDone\n    };\n\n    updatedAll[theTodo] = {\n      ...updatedAll[theTodo],\n      done: !isDone\n    };\n\n    if (!isDone) {\n      checkedItems.push(updatedTodos[theTodo]);\n      this.remove(active, theTodo);\n    } else {\n      this.remove(checkedItems, theTodo);\n      active.push(updatedTodos[theTodo]);\n    }\n\n    this.setState({\n      todos: updatedTodos,\n      checkedItems,\n      active,\n      allItems: updatedAll\n    });\n  };\n\n  handleItemAdded = () => {\n    let {\n      active,\n      uniqueId,\n      todos,\n      newItemText,\n      allItems,\n      uniqueIds\n    } = this.state;\n\n    uniqueId = uniqueId + Math.floor(Math.random() * 100);\n\n    if (newItemText) {\n      let newTodo = {\n        id: uniqueId,\n        text: newItemText,\n        done: false\n      };\n\n      this.setState(({ uniqueIds }) => {\n        return {\n          todos: [...todos, newTodo],\n          newItemText: \"\",\n          uniqueIds: [...uniqueIds, uniqueId],\n          uniqueId: uniqueId,\n          active: [...active, newTodo],\n          allItems: [...allItems, newTodo]\n        };\n      });\n    }\n  };\n\n  handleNewItemTextChange = text => {\n    this.setState({\n      newItemText: text\n    });\n  };\n\n  handleItemsArchive = () => {\n    this.setState(({ active }) => {\n      return {\n        todos: active\n      };\n    });\n  };\n\n  handleFIlterChange = filterValue => {\n    this.setState({ filterValue });\n  };\n\n  handleFilterItems = (items, filterValue) => {\n    if (filterValue === \"all\") {\n      this.setState(({ checkedItems, active }) => {\n        return {\n          todos: [...checkedItems, ...active]\n        };\n      });\n    } else if (filterValue === \"active\") {\n      this.setState(({ active }) => {\n        return {\n          todos: active\n        };\n      });\n    } else if (filterValue === \"completed\") {\n      this.setState(({ checkedItems }) => {\n        return {\n          todos: checkedItems\n        };\n      });\n    } else if (filterValue === \"clean\") {\n      this.setState(({ active }) => {\n        return {\n          todos: active,\n          checkedItems: []\n        };\n      });\n    }\n  };\n\n  render() {\n    const { uniqueId, todos, newItemText, filterValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <TodoApp\n          newItemText={newItemText}\n          todos={todos}\n          uniqueId={uniqueId}\n          onItemSelected={this.handleItemSelection}\n          onItemAdded={this.handleItemAdded}\n          onItemsArchive={this.handleItemsArchive}\n          onNewItemTextChange={this.handleNewItemTextChange}\n          onItemsAll={this.handleAll}\n          onItemsActive={this.handleActive}\n          onItemsCompleted={this.handleCompleted}\n          onCleanCompleted={this.handleCleanCompleted}\n          changeFIlter={this.handleFIlterChange}\n          filterValue={filterValue}\n          filterItems={this.handleFilterItems}\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}